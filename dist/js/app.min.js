/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _openTabs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./openTabs.js */ \"./src/js/openTabs.js\");\n\n\nconst dropdownButton = document.querySelector(\".dropdown__dashboard\");\nconst dropdown = document.querySelector(\".dropdown\");\nconst checkoutOptions = [];\nconst options = document.querySelectorAll(\".option\");\nlet valueOptionCheck = 0;\nconst countMarker = document.querySelector(\".dashboard__marker\");\nconst panelOptions = document.querySelector(\".select-panel\");\nconst optionInputs = document.querySelectorAll(\".option__input\");\n\nfunction dropdownButtonClickHandler() {\n    dropdown.classList.toggle(\"dropdown--open\");\n}\n\ndropdownButton.addEventListener('click', dropdownButtonClickHandler);\n\nconst tabs = new _openTabs_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](dropdown);\ntabs.init();\n\noptions.forEach((option) => {\n    option.addEventListener('change', optionClickHandler);\n});\n\nfunction toggleClass(array) {\n\n    if (array.length) {\n        countMarker.classList.add(\"dashboard__marker--active\");\n        panelOptions.classList.add(\"select-panel--active\");\n        dropdown.classList.add(\"dropdown--active\");\n    } else {\n        countMarker.classList.remove(\"dashboard__marker--active\");\n        panelOptions.classList.remove(\"select-panel--active\");\n        dropdown.classList.remove(\"dropdown--active\");\n    }\n}\n\nfunction deleteOption(array, item) {\n    const id = item.querySelector(\"input\").id;\n    const index = array.findIndex(option => option.querySelector('input').id == id);\n\n    deleteOptionPanel(array, item)\n    array.splice(index, 1);\n}\n\nfunction createOptionPanel(option, box) {\n\n    const value = option.querySelector(\"input\").value;\n    const id = option.querySelector(\"input\").id;\n    const html = `<li class=\"select-panel__item\" data-option=\"${id}\">\n    <span class=\"select-panel__text\">${value}</span>\n    <button class=\"select-panel__close\">\n      <svg class=\"select-panel__svg\" width=\"16\" height=\"16\">\n        <use xlink:href=\"../img/icons/icons.svg#close\"></use>\n      </svg>\n    </button>\n  </li>`\n    return box.insertAdjacentHTML(\"beforeend\", html);\n}\n\nfunction deleteOptionPanel(arrayOption, item) {\n    const id = item.querySelector(\"input\").id;\n    const index = arrayOption.findIndex(option => option.querySelector('input').id == id);\n    const arrayOptionPanel = panelOptions.querySelectorAll(\".select-panel__item\");\n    arrayOptionPanel[index].remove();\n}\n\nfunction optionClickHandler(evt) {\n\n    const item = evt.currentTarget;\n    const itemId = item.querySelector('input').id;\n    const isIdInput = checkoutOptions.find(item => item.querySelector('input').id == itemId);\n\n    if (!isIdInput) {\n        checkoutOptions.push(item);\n        toggleClass(checkoutOptions);\n        createOptionPanel(item, panelOptions);\n        initHandlerOptionPanel();\n        ++valueOptionCheck;\n        countMarker.textContent = valueOptionCheck;\n    } else {\n\n        if (checkoutOptions.length) {\n            valueOptionCheck = valueOptionCheck - 1;\n            countMarker.textContent = valueOptionCheck;\n\n            deleteOption(checkoutOptions, item);\n            initHandlerOptionPanel();\n            toggleClass(checkoutOptions);\n        }\n    }\n}\n\nfunction optionPanelClickHandler(evt) {\n    const item = evt.currentTarget;\n    const idParent = item.parentElement.dataset.option;\n    const index = checkoutOptions.findIndex(option => option.querySelector('input').id == idParent);\n\n    const input = Array.from(optionInputs).find(option => option.id === idParent);\n    input.checked = false;\n\n    checkoutOptions.splice(index, 1);\n    toggleClass(checkoutOptions);\n    valueOptionCheck = valueOptionCheck - 1;\n    countMarker.textContent = valueOptionCheck;\n\n    item.parentElement.remove();\n}\n\nfunction initHandlerOptionPanel() {\n    const options = panelOptions.querySelectorAll(\".select-panel__item button\");\n\n    options.forEach((option) => {\n        option.addEventListener('click', optionPanelClickHandler);\n    });\n}\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://cedro/./src/js/app.js?");

/***/ }),

/***/ "./src/js/openTabs.js":
/*!****************************!*\
  !*** ./src/js/openTabs.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ OpenTabs)\n/* harmony export */ });\nclass OpenTabs {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this.tabLinks = document.querySelectorAll(\".tab-list__item\");\r\n        this.tabContents = document.querySelectorAll(\".select-list\");\r\n\r\n        this.tabClickHandler = this.tabClickHandler.bind(this);\r\n    }\r\n\r\n    init() {\r\n        this.tabLinks.forEach((element) => {\r\n            element.addEventListener(\"click\", this.tabClickHandler);\r\n        });\r\n        this.container.addEventListener(\"click\", this.testHandler)\r\n    }\r\n\r\n    tabClickHandler(evt) {\r\n        const btnTarget = evt.currentTarget;\r\n        const idTab = btnTarget.dataset.item;\r\n\r\n        this.tabContents.forEach(function (item) {\r\n            item.classList.remove(\"select-list--active\");\r\n        });\r\n\r\n        this.tabLinks.forEach(function (item) {\r\n            item.classList.remove(\"tab-list__item--active\");\r\n        });\r\n\r\n        document.querySelector(`#${idTab}`).classList.add(\"select-list--active\");\r\n\r\n        btnTarget.classList.add(\"tab-list__item--active\");\r\n    }\r\n}\n\n//# sourceURL=webpack://cedro/./src/js/openTabs.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;